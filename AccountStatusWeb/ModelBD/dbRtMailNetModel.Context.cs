//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AccountStatusWeb.ModelBD
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class dbRtMailNetEntities : DbContext
    {
        public dbRtMailNetEntities()
            : base("name=dbRtMailNetEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<tAttachment> tAttachment { get; set; }
        public virtual DbSet<tBill> tBill { get; set; }
        public virtual DbSet<tClient> tClient { get; set; }
        public virtual DbSet<tClientUSA> tClientUSA { get; set; }
        public virtual DbSet<tCountry> tCountry { get; set; }
        public virtual DbSet<tEmailAccount> tEmailAccount { get; set; }
        public virtual DbSet<tImageConfig> tImageConfig { get; set; }
        public virtual DbSet<tLogConfig> tLogConfig { get; set; }
        public virtual DbSet<tProcedureLoadData> tProcedureLoadData { get; set; }
        public virtual DbSet<tReport> tReport { get; set; }
        public virtual DbSet<tReportMessage> tReportMessage { get; set; }
        public virtual DbSet<tReportParameter> tReportParameter { get; set; }
        public virtual DbSet<tReportServerConfig> tReportServerConfig { get; set; }
        public virtual DbSet<tSignature> tSignature { get; set; }
        public virtual DbSet<tSmtp> tSmtp { get; set; }
    
        public virtual ObjectResult<pAttachment_Get_Result> pAttachment_Get(Nullable<byte> idAttachment)
        {
            var idAttachmentParameter = idAttachment.HasValue ?
                new ObjectParameter("idAttachment", idAttachment) :
                new ObjectParameter("idAttachment", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pAttachment_Get_Result>("pAttachment_Get", idAttachmentParameter);
        }
    
        public virtual ObjectResult<pClient_Get_Result> pClient_Get(string codigo)
        {
            var codigoParameter = codigo != null ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pClient_Get_Result>("pClient_Get", codigoParameter);
        }
    
        public virtual ObjectResult<pCountry_Get_Result> pCountry_Get(Nullable<byte> idCountry)
        {
            var idCountryParameter = idCountry.HasValue ?
                new ObjectParameter("idCountry", idCountry) :
                new ObjectParameter("idCountry", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pCountry_Get_Result>("pCountry_Get", idCountryParameter);
        }
    
        public virtual ObjectResult<pEmailAccount_Get_Result> pEmailAccount_Get(Nullable<short> idEmailAccount)
        {
            var idEmailAccountParameter = idEmailAccount.HasValue ?
                new ObjectParameter("idEmailAccount", idEmailAccount) :
                new ObjectParameter("idEmailAccount", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pEmailAccount_Get_Result>("pEmailAccount_Get", idEmailAccountParameter);
        }
    
        public virtual ObjectResult<pImageConfig_Get_Result> pImageConfig_Get(Nullable<byte> idImageConfig)
        {
            var idImageConfigParameter = idImageConfig.HasValue ?
                new ObjectParameter("idImageConfig", idImageConfig) :
                new ObjectParameter("idImageConfig", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pImageConfig_Get_Result>("pImageConfig_Get", idImageConfigParameter);
        }
    
        public virtual ObjectResult<pLogConfig_Get_Result> pLogConfig_Get(Nullable<byte> idLogConfig)
        {
            var idLogConfigParameter = idLogConfig.HasValue ?
                new ObjectParameter("idLogConfig", idLogConfig) :
                new ObjectParameter("idLogConfig", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pLogConfig_Get_Result>("pLogConfig_Get", idLogConfigParameter);
        }
    
        public virtual ObjectResult<pProcedureLoadData_Get_Result> pProcedureLoadData_Get(Nullable<byte> idProcedureLoadData)
        {
            var idProcedureLoadDataParameter = idProcedureLoadData.HasValue ?
                new ObjectParameter("idProcedureLoadData", idProcedureLoadData) :
                new ObjectParameter("idProcedureLoadData", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pProcedureLoadData_Get_Result>("pProcedureLoadData_Get", idProcedureLoadDataParameter);
        }
    
        public virtual ObjectResult<pReport_Get_Result> pReport_Get(Nullable<short> idReport)
        {
            var idReportParameter = idReport.HasValue ?
                new ObjectParameter("idReport", idReport) :
                new ObjectParameter("idReport", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pReport_Get_Result>("pReport_Get", idReportParameter);
        }
    
        public virtual ObjectResult<pReportMessage_Get_Result> pReportMessage_Get(Nullable<int> idReportMessage)
        {
            var idReportMessageParameter = idReportMessage.HasValue ?
                new ObjectParameter("idReportMessage", idReportMessage) :
                new ObjectParameter("idReportMessage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pReportMessage_Get_Result>("pReportMessage_Get", idReportMessageParameter);
        }
    
        public virtual ObjectResult<pReportMessageByidReport_Get_Result> pReportMessageByidReport_Get(Nullable<short> idReport)
        {
            var idReportParameter = idReport.HasValue ?
                new ObjectParameter("idReport", idReport) :
                new ObjectParameter("idReport", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pReportMessageByidReport_Get_Result>("pReportMessageByidReport_Get", idReportParameter);
        }
    
        public virtual ObjectResult<pReportParameter_Get_Result> pReportParameter_Get(Nullable<byte> idReportParameter)
        {
            var idReportParameterParameter = idReportParameter.HasValue ?
                new ObjectParameter("idReportParameter", idReportParameter) :
                new ObjectParameter("idReportParameter", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pReportParameter_Get_Result>("pReportParameter_Get", idReportParameterParameter);
        }
    
        public virtual ObjectResult<pReportParameterByidReport_Get_Result> pReportParameterByidReport_Get(Nullable<short> idReport)
        {
            var idReportParameter = idReport.HasValue ?
                new ObjectParameter("idReport", idReport) :
                new ObjectParameter("idReport", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pReportParameterByidReport_Get_Result>("pReportParameterByidReport_Get", idReportParameter);
        }
    
        public virtual ObjectResult<pReportServerConfig_Get_Result> pReportServerConfig_Get(Nullable<byte> idReportServerConfig)
        {
            var idReportServerConfigParameter = idReportServerConfig.HasValue ?
                new ObjectParameter("idReportServerConfig", idReportServerConfig) :
                new ObjectParameter("idReportServerConfig", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pReportServerConfig_Get_Result>("pReportServerConfig_Get", idReportServerConfigParameter);
        }
    
        public virtual ObjectResult<pSignature_Get_Result> pSignature_Get(Nullable<byte> idSignature)
        {
            var idSignatureParameter = idSignature.HasValue ?
                new ObjectParameter("idSignature", idSignature) :
                new ObjectParameter("idSignature", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSignature_Get_Result>("pSignature_Get", idSignatureParameter);
        }
    
        public virtual ObjectResult<pSmtp_Get_Result> pSmtp_Get(Nullable<byte> idSmtp)
        {
            var idSmtpParameter = idSmtp.HasValue ?
                new ObjectParameter("idSmtp", idSmtp) :
                new ObjectParameter("idSmtp", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSmtp_Get_Result>("pSmtp_Get", idSmtpParameter);
        }
    
        public virtual int pSUPPORT_createProcedureParameterGet(string schemaName, string tablaName)
        {
            var schemaNameParameter = schemaName != null ?
                new ObjectParameter("schemaName", schemaName) :
                new ObjectParameter("schemaName", typeof(string));
    
            var tablaNameParameter = tablaName != null ?
                new ObjectParameter("tablaName", tablaName) :
                new ObjectParameter("tablaName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pSUPPORT_createProcedureParameterGet", schemaNameParameter, tablaNameParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
